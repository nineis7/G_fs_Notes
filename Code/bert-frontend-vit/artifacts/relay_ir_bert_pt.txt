def @main(%input_ids: Tensor[(1, 14), int64], %attention_mask: Tensor[(1, 14), int64], param_se_scopes=[SEScope(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0}, host=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0}))), SEScope(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0}, host=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0})))], result_se_scope=SEScope(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0}, host=Target(kind='llvm', keys={'cpu'}, attrs={"link-params': (bool)0}))), hash="ab2927fe1c349cf3", weight_layout="NC8n") -> (Tensor[(1, 14, 768), float32], Tensor[(1, 768), float32]) {
  %0 = cast(%input_ids, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %1 = take(meta[relay.Constant][0] /* ty=Tensor[(30522, 768), float32] */, %0, axis=0) /* ty=Tensor[(1, 14, 768), float32] */;
  %2 = add(%1, meta[relay.Constant][1] /* ty=Tensor[(1, 14, 768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %3 = add(%2, meta[relay.Constant][2] /* ty=Tensor[(1, 14, 768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %4 = nn.layer_norm(%3, meta[relay.Constant][3] /* ty=Tensor[(768), float32] */, meta[relay.Constant][4] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %5 = reshape(%4, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  
  %6 = nn.contrib_dense_pack(%5, meta[relay.Constant][5] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %7 = reshape(%6, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %8 = add(%7, meta[relay.Constant][6] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %9 = reshape(%8, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %10 = transpose(%9, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  
  %11 = nn.contrib_dense_pack(%5, meta[relay.Constant][7] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %12 = reshape(%11, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %13 = add(%12, meta[relay.Constant][8] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %14 = reshape(%13, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %15 = transpose(%14, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;

  %16 = reshape(%10, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %17 = reshape(%15, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %18 = nn.batch_matmul(%16, %17, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %19 = reshape(%18, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %20 = expand_dims(%attention_mask, axis=1) /* ty=Tensor[(1, 1, 14), int64] */;
  %21 = expand_dims(%20, axis=2) /* ty=Tensor[(1, 1, 1, 14), int64] */;
  %22 = cast(%21, dtype="float32") /* ty=Tensor[(1, 1, 1, 14), float32] */;
  %23 = subtract(1f /* ty=float32 */, %22) /* ty=Tensor[(1, 1, 1, 14), float32] */;
  %24 = divide(%19, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %25 = multiply(%23, -10000f /* ty=float32 */) /* ty=Tensor[(1, 1, 1, 14), float32] */;
  %26 = add(%24, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %27 = nn.softmax(%26) /* ty=Tensor[(1, 12, 14, 14), float32] */;

  %28 = nn.contrib_dense_pack(%5, meta[relay.Constant][9] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %29 = reshape(%28, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %30 = add(%29, meta[relay.Constant][10] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %31 = reshape(%30, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %32 = transpose(%31, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;

  %33 = reshape(%27, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %34 = reshape(%32, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %35 = nn.batch_matmul(%33, %34, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %36 = reshape(%35, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %37 = transpose(%36, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %38 = reshape(%37, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;

  %39 = nn.contrib_dense_pack(%38, meta[relay.Constant][11] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %40 = reshape(%39, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %41 = add(%40, meta[relay.Constant][12] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %42 = add(%41, %4) /* ty=Tensor[(1, 14, 768), float32] */;
  %43 = nn.layer_norm(%42, meta[relay.Constant][13] /* ty=Tensor[(768), float32] */, meta[relay.Constant][14] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  
  %44 = reshape(%43, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %45 = nn.contrib_dense_pack(%44, meta[relay.Constant][15] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %46 = reshape(%45, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %47 = add(%46, meta[relay.Constant][16] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %48 = multiply(%47, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %49 = erf(%48) /* ty=Tensor[(1, 14, 3072), float32] */;
  %50 = multiply(%49, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %51 = add(0.5f /* ty=float32 */, %50) /* ty=Tensor[(1, 14, 3072), float32] */;
  %52 = multiply(%47, %51) /* ty=Tensor[(1, 14, 3072), float32] */;

  %53 = reshape(%52, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %54 = nn.contrib_dense_pack(%53, meta[relay.Constant][17] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %55 = reshape(%54, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %56 = add(%55, meta[relay.Constant][18] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %57 = add(%56, %43) /* ty=Tensor[(1, 14, 768), float32] */;
  %58 = nn.layer_norm(%57, meta[relay.Constant][19] /* ty=Tensor[(768), float32] */, meta[relay.Constant][20] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  
  %59 = reshape(%58, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %60 = nn.contrib_dense_pack(%59, meta[relay.Constant][21] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %61 = reshape(%60, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %62 = add(%61, meta[relay.Constant][22] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %63 = reshape(%62, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %64 = transpose(%63, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %65 = nn.contrib_dense_pack(%59, meta[relay.Constant][23] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %66 = reshape(%65, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %67 = add(%66, meta[relay.Constant][24] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %68 = reshape(%67, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %69 = transpose(%68, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %70 = reshape(%64, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %71 = reshape(%69, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %72 = nn.batch_matmul(%70, %71, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %73 = reshape(%72, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %74 = divide(%73, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %75 = add(%74, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %76 = nn.softmax(%75) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %77 = nn.contrib_dense_pack(%59, meta[relay.Constant][25] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %78 = reshape(%77, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %79 = add(%78, meta[relay.Constant][26] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %80 = reshape(%79, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %81 = transpose(%80, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %82 = reshape(%76, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %83 = reshape(%81, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %84 = nn.batch_matmul(%82, %83, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %85 = reshape(%84, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %86 = transpose(%85, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %87 = reshape(%86, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %88 = nn.contrib_dense_pack(%87, meta[relay.Constant][27] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %89 = reshape(%88, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %90 = add(%89, meta[relay.Constant][28] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %91 = add(%90, %58) /* ty=Tensor[(1, 14, 768), float32] */;
  %92 = nn.layer_norm(%91, meta[relay.Constant][29] /* ty=Tensor[(768), float32] */, meta[relay.Constant][30] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %93 = reshape(%92, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %94 = nn.contrib_dense_pack(%93, meta[relay.Constant][31] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %95 = reshape(%94, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %96 = add(%95, meta[relay.Constant][32] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %97 = multiply(%96, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %98 = erf(%97) /* ty=Tensor[(1, 14, 3072), float32] */;
  %99 = multiply(%98, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %100 = add(0.5f /* ty=float32 */, %99) /* ty=Tensor[(1, 14, 3072), float32] */;
  %101 = multiply(%96, %100) /* ty=Tensor[(1, 14, 3072), float32] */;
  %102 = reshape(%101, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %103 = nn.contrib_dense_pack(%102, meta[relay.Constant][33] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %104 = reshape(%103, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %105 = add(%104, meta[relay.Constant][34] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %106 = add(%105, %92) /* ty=Tensor[(1, 14, 768), float32] */;
  %107 = nn.layer_norm(%106, meta[relay.Constant][35] /* ty=Tensor[(768), float32] */, meta[relay.Constant][36] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %108 = reshape(%107, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %109 = nn.contrib_dense_pack(%108, meta[relay.Constant][37] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %110 = reshape(%109, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %111 = add(%110, meta[relay.Constant][38] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %112 = reshape(%111, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %113 = transpose(%112, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %114 = nn.contrib_dense_pack(%108, meta[relay.Constant][39] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %115 = reshape(%114, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %116 = add(%115, meta[relay.Constant][40] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %117 = reshape(%116, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %118 = transpose(%117, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %119 = reshape(%113, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %120 = reshape(%118, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %121 = nn.batch_matmul(%119, %120, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %122 = reshape(%121, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %123 = divide(%122, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %124 = add(%123, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %125 = nn.softmax(%124) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %126 = nn.contrib_dense_pack(%108, meta[relay.Constant][41] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %127 = reshape(%126, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %128 = add(%127, meta[relay.Constant][42] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %129 = reshape(%128, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %130 = transpose(%129, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %131 = reshape(%125, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %132 = reshape(%130, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %133 = nn.batch_matmul(%131, %132, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %134 = reshape(%133, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %135 = transpose(%134, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %136 = reshape(%135, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %137 = nn.contrib_dense_pack(%136, meta[relay.Constant][43] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %138 = reshape(%137, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %139 = add(%138, meta[relay.Constant][44] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %140 = add(%139, %107) /* ty=Tensor[(1, 14, 768), float32] */;
  %141 = nn.layer_norm(%140, meta[relay.Constant][45] /* ty=Tensor[(768), float32] */, meta[relay.Constant][46] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %142 = reshape(%141, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %143 = nn.contrib_dense_pack(%142, meta[relay.Constant][47] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %144 = reshape(%143, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %145 = add(%144, meta[relay.Constant][48] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %146 = multiply(%145, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %147 = erf(%146) /* ty=Tensor[(1, 14, 3072), float32] */;
  %148 = multiply(%147, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %149 = add(0.5f /* ty=float32 */, %148) /* ty=Tensor[(1, 14, 3072), float32] */;
  %150 = multiply(%145, %149) /* ty=Tensor[(1, 14, 3072), float32] */;
  %151 = reshape(%150, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %152 = nn.contrib_dense_pack(%151, meta[relay.Constant][49] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %153 = reshape(%152, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %154 = add(%153, meta[relay.Constant][50] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %155 = add(%154, %141) /* ty=Tensor[(1, 14, 768), float32] */;
  %156 = nn.layer_norm(%155, meta[relay.Constant][51] /* ty=Tensor[(768), float32] */, meta[relay.Constant][52] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %157 = reshape(%156, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %158 = nn.contrib_dense_pack(%157, meta[relay.Constant][53] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %159 = reshape(%158, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %160 = add(%159, meta[relay.Constant][54] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %161 = reshape(%160, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %162 = transpose(%161, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %163 = nn.contrib_dense_pack(%157, meta[relay.Constant][55] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %164 = reshape(%163, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %165 = add(%164, meta[relay.Constant][56] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %166 = reshape(%165, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %167 = transpose(%166, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %168 = reshape(%162, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %169 = reshape(%167, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %170 = nn.batch_matmul(%168, %169, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %171 = reshape(%170, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %172 = divide(%171, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %173 = add(%172, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %174 = nn.softmax(%173) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %175 = nn.contrib_dense_pack(%157, meta[relay.Constant][57] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %176 = reshape(%175, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %177 = add(%176, meta[relay.Constant][58] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %178 = reshape(%177, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %179 = transpose(%178, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %180 = reshape(%174, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %181 = reshape(%179, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %182 = nn.batch_matmul(%180, %181, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %183 = reshape(%182, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %184 = transpose(%183, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %185 = reshape(%184, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %186 = nn.contrib_dense_pack(%185, meta[relay.Constant][59] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %187 = reshape(%186, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %188 = add(%187, meta[relay.Constant][60] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %189 = add(%188, %156) /* ty=Tensor[(1, 14, 768), float32] */;
  %190 = nn.layer_norm(%189, meta[relay.Constant][61] /* ty=Tensor[(768), float32] */, meta[relay.Constant][62] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %191 = reshape(%190, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %192 = nn.contrib_dense_pack(%191, meta[relay.Constant][63] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %193 = reshape(%192, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %194 = add(%193, meta[relay.Constant][64] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %195 = multiply(%194, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %196 = erf(%195) /* ty=Tensor[(1, 14, 3072), float32] */;
  %197 = multiply(%196, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %198 = add(0.5f /* ty=float32 */, %197) /* ty=Tensor[(1, 14, 3072), float32] */;
  %199 = multiply(%194, %198) /* ty=Tensor[(1, 14, 3072), float32] */;
  %200 = reshape(%199, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %201 = nn.contrib_dense_pack(%200, meta[relay.Constant][65] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %202 = reshape(%201, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %203 = add(%202, meta[relay.Constant][66] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %204 = add(%203, %190) /* ty=Tensor[(1, 14, 768), float32] */;
  %205 = nn.layer_norm(%204, meta[relay.Constant][67] /* ty=Tensor[(768), float32] */, meta[relay.Constant][68] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %206 = reshape(%205, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %207 = nn.contrib_dense_pack(%206, meta[relay.Constant][69] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %208 = reshape(%207, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %209 = add(%208, meta[relay.Constant][70] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %210 = reshape(%209, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %211 = transpose(%210, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %212 = nn.contrib_dense_pack(%206, meta[relay.Constant][71] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %213 = reshape(%212, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %214 = add(%213, meta[relay.Constant][72] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %215 = reshape(%214, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %216 = transpose(%215, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %217 = reshape(%211, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %218 = reshape(%216, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %219 = nn.batch_matmul(%217, %218, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %220 = reshape(%219, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %221 = divide(%220, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %222 = add(%221, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %223 = nn.softmax(%222) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %224 = nn.contrib_dense_pack(%206, meta[relay.Constant][73] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %225 = reshape(%224, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %226 = add(%225, meta[relay.Constant][74] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %227 = reshape(%226, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %228 = transpose(%227, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %229 = reshape(%223, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %230 = reshape(%228, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %231 = nn.batch_matmul(%229, %230, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %232 = reshape(%231, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %233 = transpose(%232, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %234 = reshape(%233, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %235 = nn.contrib_dense_pack(%234, meta[relay.Constant][75] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %236 = reshape(%235, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %237 = add(%236, meta[relay.Constant][76] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %238 = add(%237, %205) /* ty=Tensor[(1, 14, 768), float32] */;
  %239 = nn.layer_norm(%238, meta[relay.Constant][77] /* ty=Tensor[(768), float32] */, meta[relay.Constant][78] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %240 = reshape(%239, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %241 = nn.contrib_dense_pack(%240, meta[relay.Constant][79] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %242 = reshape(%241, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %243 = add(%242, meta[relay.Constant][80] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %244 = multiply(%243, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %245 = erf(%244) /* ty=Tensor[(1, 14, 3072), float32] */;
  %246 = multiply(%245, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %247 = add(0.5f /* ty=float32 */, %246) /* ty=Tensor[(1, 14, 3072), float32] */;
  %248 = multiply(%243, %247) /* ty=Tensor[(1, 14, 3072), float32] */;
  %249 = reshape(%248, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %250 = nn.contrib_dense_pack(%249, meta[relay.Constant][81] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %251 = reshape(%250, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %252 = add(%251, meta[relay.Constant][82] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %253 = add(%252, %239) /* ty=Tensor[(1, 14, 768), float32] */;
  %254 = nn.layer_norm(%253, meta[relay.Constant][83] /* ty=Tensor[(768), float32] */, meta[relay.Constant][84] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %255 = reshape(%254, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %256 = nn.contrib_dense_pack(%255, meta[relay.Constant][85] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %257 = reshape(%256, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %258 = add(%257, meta[relay.Constant][86] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %259 = reshape(%258, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %260 = transpose(%259, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %261 = nn.contrib_dense_pack(%255, meta[relay.Constant][87] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %262 = reshape(%261, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %263 = add(%262, meta[relay.Constant][88] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %264 = reshape(%263, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %265 = transpose(%264, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %266 = reshape(%260, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %267 = reshape(%265, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %268 = nn.batch_matmul(%266, %267, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %269 = reshape(%268, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %270 = divide(%269, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %271 = add(%270, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %272 = nn.softmax(%271) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %273 = nn.contrib_dense_pack(%255, meta[relay.Constant][89] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %274 = reshape(%273, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %275 = add(%274, meta[relay.Constant][90] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %276 = reshape(%275, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %277 = transpose(%276, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %278 = reshape(%272, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %279 = reshape(%277, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %280 = nn.batch_matmul(%278, %279, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %281 = reshape(%280, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %282 = transpose(%281, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %283 = reshape(%282, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %284 = nn.contrib_dense_pack(%283, meta[relay.Constant][91] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %285 = reshape(%284, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %286 = add(%285, meta[relay.Constant][92] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %287 = add(%286, %254) /* ty=Tensor[(1, 14, 768), float32] */;
  %288 = nn.layer_norm(%287, meta[relay.Constant][93] /* ty=Tensor[(768), float32] */, meta[relay.Constant][94] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %289 = reshape(%288, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %290 = nn.contrib_dense_pack(%289, meta[relay.Constant][95] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %291 = reshape(%290, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %292 = add(%291, meta[relay.Constant][96] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %293 = multiply(%292, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %294 = erf(%293) /* ty=Tensor[(1, 14, 3072), float32] */;
  %295 = multiply(%294, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %296 = add(0.5f /* ty=float32 */, %295) /* ty=Tensor[(1, 14, 3072), float32] */;
  %297 = multiply(%292, %296) /* ty=Tensor[(1, 14, 3072), float32] */;
  %298 = reshape(%297, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %299 = nn.contrib_dense_pack(%298, meta[relay.Constant][97] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %300 = reshape(%299, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %301 = add(%300, meta[relay.Constant][98] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %302 = add(%301, %288) /* ty=Tensor[(1, 14, 768), float32] */;
  %303 = nn.layer_norm(%302, meta[relay.Constant][99] /* ty=Tensor[(768), float32] */, meta[relay.Constant][100] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %304 = reshape(%303, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %305 = nn.contrib_dense_pack(%304, meta[relay.Constant][101] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %306 = reshape(%305, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %307 = add(%306, meta[relay.Constant][102] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %308 = reshape(%307, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %309 = transpose(%308, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %310 = nn.contrib_dense_pack(%304, meta[relay.Constant][103] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %311 = reshape(%310, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %312 = add(%311, meta[relay.Constant][104] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %313 = reshape(%312, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %314 = transpose(%313, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %315 = reshape(%309, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %316 = reshape(%314, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %317 = nn.batch_matmul(%315, %316, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %318 = reshape(%317, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %319 = divide(%318, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %320 = add(%319, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %321 = nn.softmax(%320) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %322 = nn.contrib_dense_pack(%304, meta[relay.Constant][105] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %323 = reshape(%322, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %324 = add(%323, meta[relay.Constant][106] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %325 = reshape(%324, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %326 = transpose(%325, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %327 = reshape(%321, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %328 = reshape(%326, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %329 = nn.batch_matmul(%327, %328, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %330 = reshape(%329, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %331 = transpose(%330, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %332 = reshape(%331, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %333 = nn.contrib_dense_pack(%332, meta[relay.Constant][107] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %334 = reshape(%333, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %335 = add(%334, meta[relay.Constant][108] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %336 = add(%335, %303) /* ty=Tensor[(1, 14, 768), float32] */;
  %337 = nn.layer_norm(%336, meta[relay.Constant][109] /* ty=Tensor[(768), float32] */, meta[relay.Constant][110] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %338 = reshape(%337, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %339 = nn.contrib_dense_pack(%338, meta[relay.Constant][111] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %340 = reshape(%339, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %341 = add(%340, meta[relay.Constant][112] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %342 = multiply(%341, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %343 = erf(%342) /* ty=Tensor[(1, 14, 3072), float32] */;
  %344 = multiply(%343, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %345 = add(0.5f /* ty=float32 */, %344) /* ty=Tensor[(1, 14, 3072), float32] */;
  %346 = multiply(%341, %345) /* ty=Tensor[(1, 14, 3072), float32] */;
  %347 = reshape(%346, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %348 = nn.contrib_dense_pack(%347, meta[relay.Constant][113] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %349 = reshape(%348, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %350 = add(%349, meta[relay.Constant][114] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %351 = add(%350, %337) /* ty=Tensor[(1, 14, 768), float32] */;
  %352 = nn.layer_norm(%351, meta[relay.Constant][115] /* ty=Tensor[(768), float32] */, meta[relay.Constant][116] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %353 = reshape(%352, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %354 = nn.contrib_dense_pack(%353, meta[relay.Constant][117] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %355 = reshape(%354, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %356 = add(%355, meta[relay.Constant][118] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %357 = reshape(%356, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %358 = transpose(%357, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %359 = nn.contrib_dense_pack(%353, meta[relay.Constant][119] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %360 = reshape(%359, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %361 = add(%360, meta[relay.Constant][120] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %362 = reshape(%361, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %363 = transpose(%362, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %364 = reshape(%358, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %365 = reshape(%363, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %366 = nn.batch_matmul(%364, %365, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %367 = reshape(%366, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %368 = divide(%367, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %369 = add(%368, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %370 = nn.softmax(%369) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %371 = nn.contrib_dense_pack(%353, meta[relay.Constant][121] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %372 = reshape(%371, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %373 = add(%372, meta[relay.Constant][122] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %374 = reshape(%373, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %375 = transpose(%374, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %376 = reshape(%370, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %377 = reshape(%375, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %378 = nn.batch_matmul(%376, %377, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %379 = reshape(%378, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %380 = transpose(%379, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %381 = reshape(%380, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %382 = nn.contrib_dense_pack(%381, meta[relay.Constant][123] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %383 = reshape(%382, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %384 = add(%383, meta[relay.Constant][124] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %385 = add(%384, %352) /* ty=Tensor[(1, 14, 768), float32] */;
  %386 = nn.layer_norm(%385, meta[relay.Constant][125] /* ty=Tensor[(768), float32] */, meta[relay.Constant][126] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %387 = reshape(%386, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %388 = nn.contrib_dense_pack(%387, meta[relay.Constant][127] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %389 = reshape(%388, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %390 = add(%389, meta[relay.Constant][128] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %391 = multiply(%390, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %392 = erf(%391) /* ty=Tensor[(1, 14, 3072), float32] */;
  %393 = multiply(%392, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %394 = add(0.5f /* ty=float32 */, %393) /* ty=Tensor[(1, 14, 3072), float32] */;
  %395 = multiply(%390, %394) /* ty=Tensor[(1, 14, 3072), float32] */;
  %396 = reshape(%395, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %397 = nn.contrib_dense_pack(%396, meta[relay.Constant][129] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %398 = reshape(%397, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %399 = add(%398, meta[relay.Constant][130] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %400 = add(%399, %386) /* ty=Tensor[(1, 14, 768), float32] */;
  %401 = nn.layer_norm(%400, meta[relay.Constant][131] /* ty=Tensor[(768), float32] */, meta[relay.Constant][132] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %402 = reshape(%401, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %403 = nn.contrib_dense_pack(%402, meta[relay.Constant][133] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %404 = reshape(%403, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %405 = add(%404, meta[relay.Constant][134] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %406 = reshape(%405, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %407 = transpose(%406, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %408 = nn.contrib_dense_pack(%402, meta[relay.Constant][135] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %409 = reshape(%408, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %410 = add(%409, meta[relay.Constant][136] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %411 = reshape(%410, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %412 = transpose(%411, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %413 = reshape(%407, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %414 = reshape(%412, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %415 = nn.batch_matmul(%413, %414, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %416 = reshape(%415, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %417 = divide(%416, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %418 = add(%417, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %419 = nn.softmax(%418) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %420 = nn.contrib_dense_pack(%402, meta[relay.Constant][137] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %421 = reshape(%420, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %422 = add(%421, meta[relay.Constant][138] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %423 = reshape(%422, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %424 = transpose(%423, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %425 = reshape(%419, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %426 = reshape(%424, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %427 = nn.batch_matmul(%425, %426, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %428 = reshape(%427, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %429 = transpose(%428, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %430 = reshape(%429, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %431 = nn.contrib_dense_pack(%430, meta[relay.Constant][139] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %432 = reshape(%431, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %433 = add(%432, meta[relay.Constant][140] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %434 = add(%433, %401) /* ty=Tensor[(1, 14, 768), float32] */;
  %435 = nn.layer_norm(%434, meta[relay.Constant][141] /* ty=Tensor[(768), float32] */, meta[relay.Constant][142] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %436 = reshape(%435, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %437 = nn.contrib_dense_pack(%436, meta[relay.Constant][143] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %438 = reshape(%437, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %439 = add(%438, meta[relay.Constant][144] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %440 = multiply(%439, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %441 = erf(%440) /* ty=Tensor[(1, 14, 3072), float32] */;
  %442 = multiply(%441, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %443 = add(0.5f /* ty=float32 */, %442) /* ty=Tensor[(1, 14, 3072), float32] */;
  %444 = multiply(%439, %443) /* ty=Tensor[(1, 14, 3072), float32] */;
  %445 = reshape(%444, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %446 = nn.contrib_dense_pack(%445, meta[relay.Constant][145] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %447 = reshape(%446, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %448 = add(%447, meta[relay.Constant][146] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %449 = add(%448, %435) /* ty=Tensor[(1, 14, 768), float32] */;
  %450 = nn.layer_norm(%449, meta[relay.Constant][147] /* ty=Tensor[(768), float32] */, meta[relay.Constant][148] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %451 = reshape(%450, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %452 = nn.contrib_dense_pack(%451, meta[relay.Constant][149] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %453 = reshape(%452, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %454 = add(%453, meta[relay.Constant][150] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %455 = reshape(%454, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %456 = transpose(%455, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %457 = nn.contrib_dense_pack(%451, meta[relay.Constant][151] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %458 = reshape(%457, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %459 = add(%458, meta[relay.Constant][152] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %460 = reshape(%459, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %461 = transpose(%460, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %462 = reshape(%456, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %463 = reshape(%461, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %464 = nn.batch_matmul(%462, %463, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %465 = reshape(%464, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %466 = divide(%465, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %467 = add(%466, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %468 = nn.softmax(%467) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %469 = nn.contrib_dense_pack(%451, meta[relay.Constant][153] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %470 = reshape(%469, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %471 = add(%470, meta[relay.Constant][154] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %472 = reshape(%471, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %473 = transpose(%472, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %474 = reshape(%468, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %475 = reshape(%473, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %476 = nn.batch_matmul(%474, %475, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %477 = reshape(%476, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %478 = transpose(%477, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %479 = reshape(%478, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %480 = nn.contrib_dense_pack(%479, meta[relay.Constant][155] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %481 = reshape(%480, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %482 = add(%481, meta[relay.Constant][156] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %483 = add(%482, %450) /* ty=Tensor[(1, 14, 768), float32] */;
  %484 = nn.layer_norm(%483, meta[relay.Constant][157] /* ty=Tensor[(768), float32] */, meta[relay.Constant][158] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %485 = reshape(%484, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %486 = nn.contrib_dense_pack(%485, meta[relay.Constant][159] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %487 = reshape(%486, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %488 = add(%487, meta[relay.Constant][160] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %489 = multiply(%488, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %490 = erf(%489) /* ty=Tensor[(1, 14, 3072), float32] */;
  %491 = multiply(%490, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %492 = add(0.5f /* ty=float32 */, %491) /* ty=Tensor[(1, 14, 3072), float32] */;
  %493 = multiply(%488, %492) /* ty=Tensor[(1, 14, 3072), float32] */;
  %494 = reshape(%493, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %495 = nn.contrib_dense_pack(%494, meta[relay.Constant][161] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %496 = reshape(%495, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %497 = add(%496, meta[relay.Constant][162] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %498 = add(%497, %484) /* ty=Tensor[(1, 14, 768), float32] */;
  %499 = nn.layer_norm(%498, meta[relay.Constant][163] /* ty=Tensor[(768), float32] */, meta[relay.Constant][164] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %500 = reshape(%499, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %501 = nn.contrib_dense_pack(%500, meta[relay.Constant][165] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %502 = reshape(%501, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %503 = add(%502, meta[relay.Constant][166] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %504 = reshape(%503, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %505 = transpose(%504, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %506 = nn.contrib_dense_pack(%500, meta[relay.Constant][167] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %507 = reshape(%506, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %508 = add(%507, meta[relay.Constant][168] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %509 = reshape(%508, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %510 = transpose(%509, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %511 = reshape(%505, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %512 = reshape(%510, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %513 = nn.batch_matmul(%511, %512, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %514 = reshape(%513, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %515 = divide(%514, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %516 = add(%515, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %517 = nn.softmax(%516) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %518 = nn.contrib_dense_pack(%500, meta[relay.Constant][169] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %519 = reshape(%518, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %520 = add(%519, meta[relay.Constant][170] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %521 = reshape(%520, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %522 = transpose(%521, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %523 = reshape(%517, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %524 = reshape(%522, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %525 = nn.batch_matmul(%523, %524, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %526 = reshape(%525, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %527 = transpose(%526, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %528 = reshape(%527, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %529 = nn.contrib_dense_pack(%528, meta[relay.Constant][171] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %530 = reshape(%529, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %531 = add(%530, meta[relay.Constant][172] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %532 = add(%531, %499) /* ty=Tensor[(1, 14, 768), float32] */;
  %533 = nn.layer_norm(%532, meta[relay.Constant][173] /* ty=Tensor[(768), float32] */, meta[relay.Constant][174] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %534 = reshape(%533, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %535 = nn.contrib_dense_pack(%534, meta[relay.Constant][175] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %536 = reshape(%535, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %537 = add(%536, meta[relay.Constant][176] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %538 = multiply(%537, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %539 = erf(%538) /* ty=Tensor[(1, 14, 3072), float32] */;
  %540 = multiply(%539, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %541 = add(0.5f /* ty=float32 */, %540) /* ty=Tensor[(1, 14, 3072), float32] */;
  %542 = multiply(%537, %541) /* ty=Tensor[(1, 14, 3072), float32] */;
  %543 = reshape(%542, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %544 = nn.contrib_dense_pack(%543, meta[relay.Constant][177] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %545 = reshape(%544, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %546 = add(%545, meta[relay.Constant][178] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %547 = add(%546, %533) /* ty=Tensor[(1, 14, 768), float32] */;
  %548 = nn.layer_norm(%547, meta[relay.Constant][179] /* ty=Tensor[(768), float32] */, meta[relay.Constant][180] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %549 = reshape(%548, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %550 = nn.contrib_dense_pack(%549, meta[relay.Constant][181] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %551 = reshape(%550, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %552 = add(%551, meta[relay.Constant][182] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %553 = reshape(%552, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %554 = transpose(%553, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %555 = nn.contrib_dense_pack(%549, meta[relay.Constant][183] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %556 = reshape(%555, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %557 = add(%556, meta[relay.Constant][184] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %558 = reshape(%557, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %559 = transpose(%558, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %560 = reshape(%554, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %561 = reshape(%559, newshape=[-1, 14, 64]) /* ty=Tensor[(12, 14, 64), float32] */;
  %562 = nn.batch_matmul(%560, %561, transpose_b=True) /* ty=Tensor[(12, 14, 14), float32] */;
  %563 = reshape(%562, newshape=[1, 12, 14, 14]) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %564 = divide(%563, 8f /* ty=float32 */) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %565 = add(%564, %25) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %566 = nn.softmax(%565) /* ty=Tensor[(1, 12, 14, 14), float32] */;
  %567 = nn.contrib_dense_pack(%549, meta[relay.Constant][185] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %568 = reshape(%567, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %569 = add(%568, meta[relay.Constant][186] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %570 = reshape(%569, newshape=[1, 14, 12, 64]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %571 = transpose(%570, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 12, 64, 14), float32] */;
  %572 = reshape(%566, newshape=[-1, 14, 14]) /* ty=Tensor[(12, 14, 14), float32] */;
  %573 = reshape(%571, newshape=[-1, 64, 14]) /* ty=Tensor[(12, 64, 14), float32] */;
  %574 = nn.batch_matmul(%572, %573, transpose_b=True) /* ty=Tensor[(12, 14, 64), float32] */;
  %575 = reshape(%574, newshape=[1, 12, 14, 64]) /* ty=Tensor[(1, 12, 14, 64), float32] */;
  %576 = transpose(%575, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 14, 12, 64), float32] */;
  %577 = reshape(%576, newshape=[14, 768]) /* ty=Tensor[(14, 768), float32] */;
  %578 = nn.contrib_dense_pack(%577, meta[relay.Constant][187] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %579 = reshape(%578, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %580 = add(%579, meta[relay.Constant][188] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %581 = add(%580, %548) /* ty=Tensor[(1, 14, 768), float32] */;
  %582 = nn.layer_norm(%581, meta[relay.Constant][189] /* ty=Tensor[(768), float32] */, meta[relay.Constant][190] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %583 = reshape(%582, newshape=[-1, 768]) /* ty=Tensor[(14, 768), float32] */;
  %584 = nn.contrib_dense_pack(%583, meta[relay.Constant][191] /* ty=Tensor[(384, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 3072), float32] */;
  %585 = reshape(%584, newshape=[1, 14, 3072]) /* ty=Tensor[(1, 14, 3072), float32] */;
  %586 = add(%585, meta[relay.Constant][192] /* ty=Tensor[(3072), float32] */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %587 = multiply(%586, 0.707107f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %588 = erf(%587) /* ty=Tensor[(1, 14, 3072), float32] */;
  %589 = multiply(%588, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 14, 3072), float32] */;
  %590 = add(0.5f /* ty=float32 */, %589) /* ty=Tensor[(1, 14, 3072), float32] */;
  %591 = multiply(%586, %590) /* ty=Tensor[(1, 14, 3072), float32] */;
  %592 = reshape(%591, newshape=[-1, 3072]) /* ty=Tensor[(14, 3072), float32] */;
  %593 = nn.contrib_dense_pack(%592, meta[relay.Constant][193] /* ty=Tensor[(96, 3072, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(14, 768), float32] */;
  %594 = reshape(%593, newshape=[1, 14, 768]) /* ty=Tensor[(1, 14, 768), float32] */;
  %595 = add(%594, meta[relay.Constant][194] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 14, 768), float32] */;
  %596 = add(%595, %582) /* ty=Tensor[(1, 14, 768), float32] */;
  %597 = nn.layer_norm(%596, meta[relay.Constant][195] /* ty=Tensor[(768), float32] */, meta[relay.Constant][196] /* ty=Tensor[(768), float32] */, epsilon=1e-12f) /* ty=Tensor[(1, 14, 768), float32] */;
  %598 = take(%597, 0 /* ty=int32 */, axis=1, mode="wrap") /* ty=Tensor[(1, 768), float32] */;
  %599 = nn.contrib_dense_pack(%598, meta[relay.Constant][197] /* ty=Tensor[(96, 768, 8), float32] */, units=None, out_dtype="float32", weight_layout="NC8n") /* ty=Tensor[(1, 768), float32] */;
  %600 = add(%599, meta[relay.Constant][198] /* ty=Tensor[(1, 768), float32] */) /* ty=Tensor[(1, 768), float32] */;
  %601 = tanh(%600) /* ty=Tensor[(1, 768), float32] */;
  (%597, %601)
}
